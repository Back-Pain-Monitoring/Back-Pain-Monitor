{"version":3,"sources":["webpack:///src/app/redflags-page/redflags-page.page.html","webpack:///src/app/redflags-page/redflags-page-routing.module.ts","webpack:///src/app/redflags-page/redflags-page.page.ts","webpack:///src/app/redflags-page/redflags-page.page.scss","webpack:///src/app/redflags-page/redflags-page.module.ts"],"names":["routes","path","component","RedflagsPagePageRoutingModule","imports","forChild","exports","RedflagsPagePage","dataService","form","updateUIFromLog","symptoms","flag","push","currentLogRedflag_symptoms","updateIsEntered","redflags","forEach","selector","template","RedflagsPagePageModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,6BAA6B;AAAA;AAAA,O;;AAA7BA,mCAA6B,6DAJzC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIyC,GAA7BH,6BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCNAI,gBAAgB;AAI3B,kCAAmBC,WAAnB,EAAgD;AAAA;;AAA7B,eAAAA,WAAA,GAAAA,WAAA;AAFZ,eAAAC,IAAA,GAAW,EAAX;AAGN;;AAL0B;AAAA;AAAA,qCAOhB;AACT,iBAAKC,eAAL;AACD;AAT0B;AAAA;AAAA,sCAWf;AACV,gBAAMC,QAAQ,GAAG,EAAjB;;AACA,iBAAK,IAAMC,IAAX,IAAmB,KAAKH,IAAxB,EAA8B;AAC5B,kBAAI,KAAKA,IAAL,CAAUG,IAAV,CAAJ,EAAqB;AACnBD,wBAAQ,CAACE,IAAT,CAAcD,IAAd;AACD;AACF;;AACD,iBAAKJ,WAAL,CAAiBM,0BAAjB,GAA8CH,QAA9C;AACA,iBAAKH,WAAL,CAAiBO,eAAjB,CAAiC,IAAjC;AACD;AApB0B;AAAA;AAAA,4CAsBT;AAAA;;AAChB,iBAAKP,WAAL,CAAiBO,eAAjB,CAAiC,KAAjC;AACA,iBAAKP,WAAL,CAAiBQ,QAAjB,CAA0BC,OAA1B,CAAkC,UAAAL,IAAI,EAAI;AACxC,mBAAI,CAACH,IAAL,CAAUG,IAAV,IAAkB,KAAlB;AACD,aAFD;AAGA,iBAAKJ,WAAL,CAAiBM,0BAAjB,CAA4CG,OAA5C,CAAoD,UAAAL,IAAI,EAAI;AAC1D,mBAAI,CAACH,IAAL,CAAUG,IAAV,IAAkB,IAAlB;AACD,aAFD;AAGD;AA9B0B;;AAAA;AAAA,S;;;;gBARpB;;;;AAQIL,sBAAgB,6DAN5B,gEAAU;AACTW,gBAAQ,EAAE,mBADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAM4B,GAAhBZ,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACVb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCqBFa,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,6DATlC,+DAAS;AACRhB,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,2FAJO,CADD;AAORiB,oBAAY,EAAE,CAAC,oEAAD,EAAmB,yGAAnB;AAPN,OAAT,CASkC,GAAtBD,sBAAsB,CAAtB","file":"redflags-page-redflags-page-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title text-wrap>Do you have any of these?</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let item of form | keyvalue\\\">\\n      <ion-label text-wrap>{{item.key}}</ion-label>\\n      <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"form[item.key]\\\"></ion-checkbox>\\n    </ion-item>\\n  </ion-list>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\" (click)=\\\"updateLog()\\\">\\n    <app-log-nav-button direction=\\\"back\\\" link=\\\"/symptoms\\\"></app-log-nav-button>\\n  </ion-fab>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" (click)=\\\"updateLog()\\\">\\n    <app-log-nav-button direction=\\\"forward\\\" link=\\\"/comments\\\">\\n    </app-log-nav-button>\\n  </ion-fab>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RedflagsPagePage } from './redflags-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RedflagsPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RedflagsPagePageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { LogDataService } from '../services/log-data.service';\n\n@Component({\n  selector: 'app-redflags-page',\n  templateUrl: './redflags-page.page.html',\n  styleUrls: ['./redflags-page.page.scss'],\n})\n\nexport class RedflagsPagePage implements OnInit {\n\n  public form: {} = {};\n\n  constructor(public dataService: LogDataService) {\n  }\n\n  ngOnInit() {\n    this.updateUIFromLog();\n  }\n\n  updateLog() {\n    const symptoms = [];\n    for (const flag in this.form) {\n      if (this.form[flag]) {\n        symptoms.push(flag);\n      }\n    }\n    this.dataService.currentLogRedflag_symptoms = symptoms;\n    this.dataService.updateIsEntered(true);\n  }\n\n  updateUIFromLog() {\n    this.dataService.updateIsEntered(false);\n    this.dataService.redflags.forEach(flag => {\n      this.form[flag] = false;\n    });\n    this.dataService.currentLogRedflag_symptoms.forEach(flag => {\n      this.form[flag] = true;\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZGZsYWdzLXBhZ2UvcmVkZmxhZ3MtcGFnZS5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RedflagsPagePageRoutingModule } from './redflags-page-routing.module';\n\nimport { RedflagsPagePage } from './redflags-page.page';\n\nimport { LogNavButtonComponent } from '../components/log-nav-button/log-nav-button.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RedflagsPagePageRoutingModule\n  ],\n  declarations: [RedflagsPagePage, LogNavButtonComponent]\n})\nexport class RedflagsPagePageModule { }\n"]}