{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./src/app/filter-modal/filter-modal.component.ts","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./src/app/services/medication-data.service.ts","./node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","./src/app/filter-modal/filter-modal.component.scss","./src/app/filter-modal/filter-modal.component.html","./node_modules/@ionic/core/dist/esm/theme-5641d27f.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AAC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","file":"common-es2015.js","sourcesContent":["const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","import { Component, Input, OnDestroy, OnInit, HostListener} from '@angular/core';\nimport { AlertController, ModalController } from '@ionic/angular'\nimport { LogDataService, LogFilter } from '../services/log-data.service';\n\n@Component({\n  selector: 'app-filter-modal',\n  templateUrl: './filter-modal.component.html',\n  styleUrls: ['./filter-modal.component.scss'],\n})\n\nexport class FilterModalPageComponent implements OnInit, OnDestroy{\n  private filter: LogFilter;\n  @Input() Filter: LogFilter;\n  intensity: any = { lower: 0, upper:10};\n  datetime_min: string;\n  datetime_max: string;\n  type: String;\n  body_part: String;\n  timesBefore_lower: Number;\n  timesBefore_upper: Number;\n\n  constructor( private modalCtrl: ModalController, public dataService: LogDataService, private alertCtrl: AlertController ) {\n  }\n\n  ngOnInit() {\n    this.updateFilterUI();\n    const modalState = {\n      modal : true,\n      desc : 'fake state for our modal'\n    };\n    history.pushState(modalState, null);\n  }\n\n  ngOnDestroy() {\n    if (window.history.state.modal) {\n      history.back();\n    }\n  }\n  \n  // Method of dismissing\n  @HostListener('window:popstate', ['$event'])\n  dismissModal() {\n    this.modalCtrl.dismiss(this.Filter, 'cancel');\n  }\n\n  // Updates UI based on previous filter setting\n  updateFilterUI() {\n    if ( this.Filter.datetime_min != undefined ) {\n      this.datetime_min = this.Filter.datetime_min.toISOString();\n    } else {\n      this.datetime_min = new Date(\"2015-01-02\").toISOString();\n    }\n\n    if ( this.Filter.datetime_max != undefined ) {\n      this.datetime_max = this.Filter.datetime_max.toISOString();\n    } else {\n      this.datetime_max = new Date().toISOString();\n    }\n\n    if ( this.Filter.intensity_min != undefined ) {\n      this.intensity.lower = this.Filter.intensity_min;  \n    }\n    \n    if ( this.Filter.intensity_max != undefined ) {\n      this.intensity.upper = this.Filter.intensity_max;  \n    }\n\n    if ( this.Filter.type == undefined ) {\n      this.type = 'nofilter';\n    } else {\n      this.type = this.Filter.type;\n    }\n    \n    this.body_part = this.Filter.body_part;\n    this.timesBefore_lower = this.Filter.timesBefore_lower;\n    this.timesBefore_upper = this.Filter.timesBefore_upper;\n  }\n  \n  // Updating Intensity dual knobs\n  private onIntensityChange(newIntensity) {\n    this.intensity.lower = newIntensity.lower;\n    this.intensity.upper = newIntensity.upper;\n  }\n\n  // Resets current filter setting\n  resetFilter() {\n    this.datetime_min = new Date(\"2015-01-02\").toISOString();\n    this.datetime_max = new Date().toISOString();\n    this.intensity =  { lower: 0, upper:10};\n    this.type = 'nofilter';\n    this.body_part = undefined;\n    this.timesBefore_lower = undefined;\n    this.timesBefore_upper = undefined;\n  }\n\n  // Checking min date is before max date\n  checkDate() {\n    let minDate: Date = new Date(this.datetime_min);\n    let maxDate: Date = new Date(this.datetime_max);\n\n    if ( minDate < maxDate ) {\n      return 1;\n    } else {\n      return 2;\n    }\n  }\n\n  // Checking the max duration is bigger than min duration\n  checkDuration() {\n    if ( this.timesBefore_upper == undefined || this.timesBefore_lower == undefined ) {\n      return 1;\n    } else if ( this.timesBefore_lower < this.timesBefore_upper ) {\n      return 1;\n    } else {\n      return 2;\n    }\n  }\n\n  // function to save filter settings and passing to view-log page\n  save() {\n    if ( this.checkDate() == 1 && this.checkDuration() == 1) {\n      this.Filter.datetime_min = new Date(this.datetime_min);\n      this.Filter.datetime_max = new Date(this.datetime_max);\n      this.Filter.intensity_min = this.intensity.lower;\n      this.Filter.intensity_max = this.intensity.upper;\n      if ( this.type == 'nofilter' ) {\n        this.Filter.type = undefined;\n      } else {\n        this.Filter.type = this.type;\n      }   \n      this.Filter.body_part = this.body_part;\n      this.Filter.timesBefore_lower = this.timesBefore_lower;\n      this.Filter.timesBefore_upper = this.timesBefore_upper;\n      const newintensity = this.intensity;\n      this.modalCtrl.dismiss(this.Filter, \"submitted\");\n    } else if ( this.checkDate() == 2 ) {\n      this.alertCtrl.create({header: \"Warning!\", message: \"'From' date should be before 'To' date!\", buttons:['Close']}).then((prompt) => {\n        prompt.present();\n      });\n    } else if ( this.checkDuration() == 2 )  { \n      this.alertCtrl.create({header: \"Warning!\", message: \"Maximum number of occurence should be higher than minimum!\", buttons:['Close']}).then((prompt) => {\n        prompt.present();\n      });\n    }\n  }\n}\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import { Injectable } from '@angular/core';\n\nexport interface medicationEntry {\n  id: number;\n  datetime: Date;\n  med_type: string[];\n  med_comment: string;\n  intensity: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MedicationDataService {\n  private medicationEntries: medicationEntry[] = [\n    {\n      id: 0,\n      datetime: new Date(\"2020-10-23\"),\n      med_type: [\"Acetaminiophen\"],\n      med_comment: \"It is not working\",\n      intensity: 5\n    },\n    {\n      id: 1,\n      datetime: new Date(\"2020-10-28\"),\n      med_type: [\"NSAID\"],\n      med_comment: \"Makes me queezy\",\n      intensity: 4\n    },\n    {\n      id: 2,\n      datetime: new Date(\"2020-11-4\"),\n      med_type: [\"COX-2 Inhibitors\"],\n      med_comment: \"Makes Pain Worse\",\n      intensity: 8\n    },\n    {\n      id: 3,\n      datetime: new Date(\"2020-11-5\"),\n      med_type: [\"NSAID\"],\n      med_comment: \"First Dose\",\n      intensity: 4\n    },\n    {\n      id: 4,\n      datetime: new Date(\"2020-11-6\"),\n      med_type: [\"Antidepressants\"],\n      med_comment: \"Helps A lot\",\n      intensity: 3\n    }\n  ];\n\n  constructor() {\n  }\n\n  load(): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n\n  private createEmptyMed(): medicationEntry {\n    return {\n      id: -1,\n      datetime: undefined,\n      med_type: undefined,\n      med_comment: undefined,\n      intensity: undefined\n    }\n  }\n\n\n  private currentMed: medicationEntry = this.createEmptyMed();\n\n  // getters & setters based on this: https://wizardforcel.gitbooks.io/tsbook/content/chapter09_ClassesInDepth.html#reffn_1\n  public set currentMedDateTime(datetime: Date) { this.currentMed.datetime = datetime; }\n  public get currentMedDateTime() { return this.currentMed.datetime; }\n\n  public set currentMedMed_type(med_type: string[]) { this.currentMed.med_type = med_type; }\n  public get currentMedMed_type() { return this.currentMed.med_type; }\n\n  public set currentMedComment(med_comment: string) { this.currentMed.med_comment = med_comment; }\n  public get currentMedComment() { return this.currentMed.med_comment; }\n\n  public set currentMedIntensity(intensity: number) { this.currentMed.intensity = intensity; }\n  public get currentMedIntensity() { return this.currentMed.intensity; }\n\n  public set currentMedId(id: number) { this.currentMed.id = id; }\n  public get currentMedId() { return this.currentMed.id; }\n\n\n  // Submit current Med Entry\n  public submitMedEntry() {\n    this.currentMed.id = this.medicationEntries.length;\n    this.medicationEntries.push(this.currentMed);\n    // TODO: Send the log to the database\n    this.currentMed = this.createEmptyMed();\n  }\n\n  public getMeds(): medicationEntry[] {\n    return this.medicationEntries;\n  }\n\n  public printMedEntry(entry?: medicationEntry) {\n    if (typeof (entry) === \"undefined\") {\n      entry = this.currentMed;\n    }\n    console.log(\"Printing Med Entry\");\n    console.log(`id: ${entry.id}`);\n    console.log(`datetime: ${entry.datetime}`);\n    console.log(`med_type: ${entry.med_type}`);\n    console.log(`intensity: ${entry.intensity}`);\n    console.log(`comment: ${entry.med_comment}`);\n  }\n\n  public printMedEntries() {\n    this.medicationEntries.forEach((entry: medicationEntry) => this.printMedEntry);\n  }\n\n\n\n}","import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbHRlci1tb2RhbC9maWx0ZXItbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Filter</ion-title>\\n    <ion-button slot=\\\"end\\\" (click)=\\\"resetFilter()\\\">Reset</ion-button>\\n    <ion-button slot=\\\"end\\\" (click)=\\\"dismissModal()\\\">Close</ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label>Time Period</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-item>From</ion-item>\\n        <ion-datetime displayFormat=\\\"D MMM YYYY H:mm\\\" [(ngModel)]=\\\"datetime_min\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-item>To</ion-item>\\n          <ion-datetime displayFormat=\\\"D MMM YYYY H:mm\\\" [(ngModel)]=\\\"datetime_max\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Pain Intensity</ion-label>\\n    </ion-item>\\n    <ion-item>\\n        <ion-range dualKnobs=\\\"true\\\" min=\\\"0\\\" max=\\\"10\\\" step=\\\"1\\\" snaps=\\\"true\\\" pin=\\\"true\\\" [ngModel]=\\\"intensity\\\"\\n          (ngModelChange)=\\\"onIntensityChange($event)\\\">\\n        <ion-note color=\\\"primary\\\" slot=\\\"start\\\">{{intensity.lower}}</ion-note>\\n        <ion-note color=\\\"primary\\\" slot=\\\"end\\\">{{intensity.upper}}</ion-note>\\n        </ion-range>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Pain Type</ion-label>\\n      <ion-select cancelText=\\\"Cancel\\\" okText=\\\"Ok\\\" [(ngModel)]=\\\"type\\\">\\n        <ion-select-option value=\\\"nofilter\\\">All of Them</ion-select-option>\\n        <ion-select-option value=\\\"none\\\">None</ion-select-option>\\n        <ion-select-option value=\\\"aching\\\">Aching</ion-select-option>\\n        <ion-select-option value=\\\"burning\\\">Burning</ion-select-option>\\n        <ion-select-option value=\\\"cramping\\\">Cramping</ion-select-option>\\n        <ion-select-option value=\\\"numbness\\\">Numbness</ion-select-option>\\n        <ion-select-option value=\\\"radiating\\\">Radiating</ion-select-option>\\n        <ion-select-option value=\\\"shooting\\\">Shooting</ion-select-option>\\n        <ion-select-option value=\\\"stabbing\\\">Stabbing</ion-select-option>\\n        <ion-select-option value=\\\"tingling\\\">Tingling</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Body Part</ion-label>\\n      <ion-select cancelText=\\\"Cancel\\\" okText=\\\"Ok\\\" [(ngModel)]=\\\"body_part\\\" multiple={true} placeholder=\\\"Select Pain Area(s)\\\">\\n        <ion-select-option value=\\\"rShoulder\\\">Right Shoulder</ion-select-option>\\n        <ion-select-option value=\\\"lShoulder\\\">Left Shoulder</ion-select-option>\\n        <ion-select-option value=\\\"neck\\\">Neck</ion-select-option>\\n        <ion-select-option value=\\\"uBack\\\">Upper Back</ion-select-option>\\n        <ion-select-option value=\\\"lBack\\\">Lower Back</ion-select-option>\\n        <ion-select-option value=\\\"mBack\\\">Middle Back</ion-select-option>\\n        <ion-select-option value=\\\"glutes\\\">Glutes</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>How many times before?</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>From</ion-label>\\n      <ion-input type=\\\"number\\\" [(ngModel)]=\\\"timesBefore_lower\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Up to</ion-label>\\n      <ion-input type=\\\"number\\\" [(ngModel)]=\\\"timesBefore_upper\\\"></ion-input>\\n    </ion-item>\\n  </ion-list>\\n  <ion-button expand=\\\"block\\\" (click)=\\\"save()\\\" class>Submit</ion-button>\\n</ion-content>\";","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":"webpack:///"}