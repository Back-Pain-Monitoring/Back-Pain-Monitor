{"version":3,"sources":["./src/app/symptoms-page/symptoms-page.page.html","./src/app/symptoms-page/symptoms-page-routing.module.ts","./src/app/symptoms-page/symptoms-page.module.ts","./src/app/symptoms-page/symptoms-page.page.scss","./src/app/symptoms-page/symptoms-page.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,27GAA43G,E;;;;;;;;;;;;;;;;;;;ACAl2G;AACc;AAEC;AAExD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAgB;KAC5B;CACF,CAAC;IAMW,6BAA6B,SAA7B,6BAA6B;CAAG;AAAhC,6BAA6B;IAJzC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,6BAA6B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBD;AACM;AACF;AAEA;AAEkC;AAEvB;IAa3C,sBAAsB,SAAtB,sBAAsB;CAAI;AAA1B,sBAAsB;IATlC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,2FAA6B;SAC9B;QACD,YAAY,EAAE,CAAC,oEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB,CAAI;AAAJ;;;;;;;;;;;;;ACrBnC;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;ACAtK;AAEY;IAOjD,gBAAgB,SAAhB,gBAAgB;IAS3B,YAAmB,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;IAC9C,CAAC;IAED,QAAQ;IACR,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC;QACtD,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,qBAAqB,GAAG,IAAI,CAAC,WAAW,KAAK,MAAM,CAAC;QACrE,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;IACnC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC;QACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;IAC/E,CAAC;IAED,oHAAoH;IACpH,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;IAC5B,CAAC;CAEF;;YAnDQ,yEAAc;;AAOV,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,yOAAwC;;KAEzC,CAAC;GACW,gBAAgB,CA4C5B;AA5C4B","file":"symptoms-page-symptoms-page-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Symptoms</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label>Pain Intensity</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-range min=\\\"0\\\" max=\\\"10\\\" step=\\\"1\\\" snaps=\\\"true\\\" pin=\\\"true\\\" [(ngModel)]=\\\"intensity\\\">\\n        <ion-label slot=\\\"start\\\">0</ion-label>\\n        <ion-label slot=\\\"end\\\">10</ion-label>\\n      </ion-range>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label id=\\\"pain-intensity-description\\\">Mild</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Pain type</ion-label>\\n      <ion-select cancelText=\\\"Cancel\\\" okText=\\\"Ok\\\" [(ngModel)]=\\\"painType\\\">\\n        <ion-select-option value=\\\"none\\\">None</ion-select-option>\\n        <ion-select-option value=\\\"aching\\\">Aching</ion-select-option>\\n        <ion-select-option value=\\\"burning\\\">Burning</ion-select-option>\\n        <ion-select-option value=\\\"cramping\\\">Cramping</ion-select-option>\\n        <ion-select-option value=\\\"numbness\\\">Numbness</ion-select-option>\\n        <ion-select-option value=\\\"radiating\\\">Radiating</ion-select-option>\\n        <ion-select-option value=\\\"shooting\\\">Shooting</ion-select-option>\\n        <ion-select-option value=\\\"stabbing\\\">Stabbing</ion-select-option>\\n        <ion-select-option value=\\\"tingling\\\">Tingling</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Pain duration</ion-label>\\n      <ion-input type=\\\"number\\\" value=\\\"30\\\" [(ngModel)]=\\\"duration\\\"></ion-input>\\n      <ion-label>minutes</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Cause of pain</ion-label>\\n      <ion-input type=\\\"text\\\" value=\\\"unknown\\\" [(ngModel)]=\\\"cause\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>When do you feel pain?</ion-label>\\n      <ion-select multiple=\\\"true\\\" [(ngModel)]=\\\"mobility\\\">\\n        <ion-select-option value=\\\"moving\\\">Moving</ion-select-option>\\n        <ion-select-option value=\\\"resting\\\">Resting</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Is the pain constant or intermittent?</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-radio-group [(ngModel)]=\\\"is_constant\\\">\\n        <ion-item>\\n          <ion-label>Constant</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"true\\\"></ion-radio>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Intermittent</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"false\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-item>\\n    <ion-item>\\n      <ion-button (click)=\\\"updateLog()\\\">Remove this button after testing</ion-button>\\n    </ion-item>\\n  </ion-list>\\n\\n  <!--Back button to bodymap page-->\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button color=\\\"success\\\" routerDirection=\\\"back\\\" routerLink=\\\"/bodymap\\\" (click)=\\\"updateLog()\\\">\\n      <ion-icon name=\\\"arrow-back-circle-outline\\\" color=\\\"dark\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n\\n  <!--Forward Button to redflags page-->\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button color=\\\"success\\\" routerDirection=\\\"forward\\\" routerLink=\\\"/redflags\\\" (click)=\\\"updateLog()\\\">\\n      <ion-icon name=\\\"arrow-forward-circle-outline\\\" color=\\\"dark\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n\\n\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SymptomsPagePage } from './symptoms-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SymptomsPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SymptomsPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SymptomsPagePageRoutingModule } from './symptoms-page-routing.module';\n\nimport { SymptomsPagePage } from './symptoms-page.page';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SymptomsPagePageRoutingModule\n  ],\n  declarations: [SymptomsPagePage]\n})\nexport class SymptomsPagePageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5bXB0b21zLXBhZ2Uvc3ltcHRvbXMtcGFnZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\nimport { LogDataService } from '../services/log-data.service';\n\n@Component({\n  selector: 'app-symptoms-page',\n  templateUrl: './symptoms-page.page.html',\n  styleUrls: ['./symptoms-page.page.scss'],\n})\nexport class SymptomsPagePage implements OnInit {\n\n  intensity: number;\n  painType: string;\n  duration: number;\n  cause: string;\n  is_constant: \"true\" | \"false\";  // TODO: there's got to be a better way to do this than this awkward string/boolean conversion\n  mobility: string[];\n\n  constructor(public dataService: LogDataService) {\n  }\n\n  ngOnInit() {\n  }\n\n  updateLog() {\n    this.dataService.currentLogIntensity = this.intensity;\n    this.dataService.currentLogType = this.painType;\n    this.dataService.currentLogDuration = this.duration;\n    this.dataService.currentLogMobility = this.mobility;\n    this.dataService.currentLogCause = this.cause;\n    this.dataService.currentLogIs_constant = this.is_constant === \"true\";\n    this.dataService.printLogEntry();\n  }\n\n  updateUIFromLog() {\n    this.intensity = this.dataService.currentLogIntensity;\n    this.painType = this.dataService.currentLogType;\n    this.duration = this.dataService.currentLogDuration;\n    this.mobility = this.dataService.currentLogMobility;\n    this.cause = this.dataService.currentLogCause;\n    this.is_constant = this.dataService.currentLogIs_constant ? \"true\" : \"false\";\n  }\n\n  // look at the UI to see the changes were made appropriately. Can trigger this function by attaching it to a button.\n  testDataBinding() {\n    this.intensity = 10;\n    this.painType = \"numbness\";\n    this.duration = 44;\n    this.cause = \"backpack\";\n    this.mobility = [\"moving\", \"resting\"];\n    this.is_constant = \"true\";\n  }\n\n}\n"],"sourceRoot":"webpack:///"}