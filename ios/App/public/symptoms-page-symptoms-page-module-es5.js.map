{"version":3,"sources":["webpack:///src/app/symptoms-page/symptoms-page.page.html","webpack:///src/app/symptoms-page/symptoms-page-routing.module.ts","webpack:///src/app/symptoms-page/symptoms-page.module.ts","webpack:///src/app/symptoms-page/symptoms-page.page.scss","webpack:///src/app/symptoms-page/symptoms-page.page.ts"],"names":["routes","path","component","SymptomsPagePageRoutingModule","imports","forChild","exports","SymptomsPagePageModule","declarations","SymptomsPagePage","dataService","currentLogIntensity","intensity","currentLogType","painType","currentLogDuration","duration","currentLogMobility","mobility","currentLogCause","cause","currentLogIs_constant","is_constant","printLogEntry","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,6BAA6B;AAAA;AAAA,O;;AAA7BA,mCAA6B,6DAJzC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIyC,GAA7BH,6BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKAI,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,6DATlC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,2FAJO,CADD;AAORI,oBAAY,EAAE,CAAC,oEAAD;AAPN,OAAT,CASkC,GAAtBD,sBAAsB,CAAtB;;;;;;;;;;;;;;;;ACrBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFE,gBAAgB;AAS3B,kCAAmBC,WAAnB,EAAgD;AAAA;;AAA7B,eAAAA,WAAA,GAAAA,WAAA;AAClB;;AAV0B;AAAA;AAAA,qCAYhB,CACV;AAb0B;AAAA;AAAA,sCAef;AACV,iBAAKA,WAAL,CAAiBC,mBAAjB,GAAuC,KAAKC,SAA5C;AACA,iBAAKF,WAAL,CAAiBG,cAAjB,GAAkC,KAAKC,QAAvC;AACA,iBAAKJ,WAAL,CAAiBK,kBAAjB,GAAsC,KAAKC,QAA3C;AACA,iBAAKN,WAAL,CAAiBO,kBAAjB,GAAsC,KAAKC,QAA3C;AACA,iBAAKR,WAAL,CAAiBS,eAAjB,GAAmC,KAAKC,KAAxC;AACA,iBAAKV,WAAL,CAAiBW,qBAAjB,GAAyC,KAAKC,WAAL,KAAqB,MAA9D;AACA,iBAAKZ,WAAL,CAAiBa,aAAjB;AACD;AAvB0B;AAAA;AAAA,4CAyBT;AAChB,iBAAKX,SAAL,GAAiB,KAAKF,WAAL,CAAiBC,mBAAlC;AACA,iBAAKG,QAAL,GAAgB,KAAKJ,WAAL,CAAiBG,cAAjC;AACA,iBAAKG,QAAL,GAAgB,KAAKN,WAAL,CAAiBK,kBAAjC;AACA,iBAAKG,QAAL,GAAgB,KAAKR,WAAL,CAAiBO,kBAAjC;AACA,iBAAKG,KAAL,GAAa,KAAKV,WAAL,CAAiBS,eAA9B;AACA,iBAAKG,WAAL,GAAmB,KAAKZ,WAAL,CAAiBW,qBAAjB,GAAyC,MAAzC,GAAkD,OAArE;AACD,WAhC0B,CAkC3B;;AAlC2B;AAAA;AAAA,4CAmCT;AAChB,iBAAKT,SAAL,GAAiB,EAAjB;AACA,iBAAKE,QAAL,GAAgB,UAAhB;AACA,iBAAKE,QAAL,GAAgB,EAAhB;AACA,iBAAKI,KAAL,GAAa,UAAb;AACA,iBAAKF,QAAL,GAAgB,CAAC,QAAD,EAAW,SAAX,CAAhB;AACA,iBAAKI,WAAL,GAAmB,MAAnB;AACD;AA1C0B;;AAAA;AAAA,S;;;;gBAPpB;;;;AAOIb,sBAAgB,6DAL5B,gEAAU;AACTe,gBAAQ,EAAE,mBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,4GAFS;;;;AAAA,OAAV,CAK4B,GAAhBhB,gBAAgB,CAAhB","file":"symptoms-page-symptoms-page-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Symptoms</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label>Pain Intensity</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-range min=\\\"0\\\" max=\\\"10\\\" step=\\\"1\\\" snaps=\\\"true\\\" pin=\\\"true\\\" [(ngModel)]=\\\"intensity\\\">\\n        <ion-label slot=\\\"start\\\">0</ion-label>\\n        <ion-label slot=\\\"end\\\">10</ion-label>\\n      </ion-range>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label id=\\\"pain-intensity-description\\\">Mild</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Pain type</ion-label>\\n      <ion-select cancelText=\\\"Cancel\\\" okText=\\\"Ok\\\" [(ngModel)]=\\\"painType\\\">\\n        <ion-select-option value=\\\"none\\\">None</ion-select-option>\\n        <ion-select-option value=\\\"aching\\\">Aching</ion-select-option>\\n        <ion-select-option value=\\\"burning\\\">Burning</ion-select-option>\\n        <ion-select-option value=\\\"cramping\\\">Cramping</ion-select-option>\\n        <ion-select-option value=\\\"numbness\\\">Numbness</ion-select-option>\\n        <ion-select-option value=\\\"radiating\\\">Radiating</ion-select-option>\\n        <ion-select-option value=\\\"shooting\\\">Shooting</ion-select-option>\\n        <ion-select-option value=\\\"stabbing\\\">Stabbing</ion-select-option>\\n        <ion-select-option value=\\\"tingling\\\">Tingling</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Pain duration</ion-label>\\n      <ion-input type=\\\"number\\\" value=\\\"30\\\" [(ngModel)]=\\\"duration\\\"></ion-input>\\n      <ion-label>minutes</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Cause of pain</ion-label>\\n      <ion-input type=\\\"text\\\" value=\\\"unknown\\\" [(ngModel)]=\\\"cause\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>When do you feel pain?</ion-label>\\n      <ion-select multiple=\\\"true\\\" [(ngModel)]=\\\"mobility\\\">\\n        <ion-select-option value=\\\"moving\\\">Moving</ion-select-option>\\n        <ion-select-option value=\\\"resting\\\">Resting</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Is the pain constant or intermittent?</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-radio-group [(ngModel)]=\\\"is_constant\\\">\\n        <ion-item>\\n          <ion-label>Constant</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"true\\\"></ion-radio>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Intermittent</ion-label>\\n          <ion-radio slot=\\\"start\\\" value=\\\"false\\\"></ion-radio>\\n        </ion-item>\\n      </ion-radio-group>\\n    </ion-item>\\n    <ion-item>\\n      <ion-button (click)=\\\"updateLog()\\\">Remove this button after testing</ion-button>\\n    </ion-item>\\n  </ion-list>\\n\\n  <!--Back button to bodymap page-->\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button color=\\\"success\\\" routerDirection=\\\"back\\\" routerLink=\\\"/bodymap\\\" (click)=\\\"updateLog()\\\">\\n      <ion-icon name=\\\"arrow-back-circle-outline\\\" color=\\\"dark\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n\\n  <!--Forward Button to redflags page-->\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button color=\\\"success\\\" routerDirection=\\\"forward\\\" routerLink=\\\"/redflags\\\" (click)=\\\"updateLog()\\\">\\n      <ion-icon name=\\\"arrow-forward-circle-outline\\\" color=\\\"dark\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n\\n\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SymptomsPagePage } from './symptoms-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SymptomsPagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SymptomsPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SymptomsPagePageRoutingModule } from './symptoms-page-routing.module';\n\nimport { SymptomsPagePage } from './symptoms-page.page';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SymptomsPagePageRoutingModule\n  ],\n  declarations: [SymptomsPagePage]\n})\nexport class SymptomsPagePageModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5bXB0b21zLXBhZ2Uvc3ltcHRvbXMtcGFnZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\nimport { LogDataService } from '../services/log-data.service';\n\n@Component({\n  selector: 'app-symptoms-page',\n  templateUrl: './symptoms-page.page.html',\n  styleUrls: ['./symptoms-page.page.scss'],\n})\nexport class SymptomsPagePage implements OnInit {\n\n  intensity: number;\n  painType: string;\n  duration: number;\n  cause: string;\n  is_constant: \"true\" | \"false\";  // TODO: there's got to be a better way to do this than this awkward string/boolean conversion\n  mobility: string[];\n\n  constructor(public dataService: LogDataService) {\n  }\n\n  ngOnInit() {\n  }\n\n  updateLog() {\n    this.dataService.currentLogIntensity = this.intensity;\n    this.dataService.currentLogType = this.painType;\n    this.dataService.currentLogDuration = this.duration;\n    this.dataService.currentLogMobility = this.mobility;\n    this.dataService.currentLogCause = this.cause;\n    this.dataService.currentLogIs_constant = this.is_constant === \"true\";\n    this.dataService.printLogEntry();\n  }\n\n  updateUIFromLog() {\n    this.intensity = this.dataService.currentLogIntensity;\n    this.painType = this.dataService.currentLogType;\n    this.duration = this.dataService.currentLogDuration;\n    this.mobility = this.dataService.currentLogMobility;\n    this.cause = this.dataService.currentLogCause;\n    this.is_constant = this.dataService.currentLogIs_constant ? \"true\" : \"false\";\n  }\n\n  // look at the UI to see the changes were made appropriately. Can trigger this function by attaching it to a button.\n  testDataBinding() {\n    this.intensity = 10;\n    this.painType = \"numbness\";\n    this.duration = 44;\n    this.cause = \"backpack\";\n    this.mobility = [\"moving\", \"resting\"];\n    this.is_constant = \"true\";\n  }\n\n}\n"]}